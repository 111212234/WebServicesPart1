package net.webservicex.goldsilver;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * THE LONDON GOLD and SILVER FIXINGS:	The Fixings are an open process at which market participants can transact business on the basis of a single quoted price. Orders can be changed throughout the proceedings as the price is moved higher and lower until such time as buyers' and sellers' orders are satisfied and the price is said to be 'fixed'. The fixings are the internationally published benchmarks for precious metals. They are fully transparent and are therefore used to deal in large amounts, or to achieve the accepted average price of the metal. As a benchmark, many other financial instruments are priced off the fixing, including cash-settled swaps and options. The silver fixing started in 1897 and the gold fixing in 1919.
 * 		
 *
 * This class was generated by Apache CXF 3.0.4
 * 2015-11-04T12:57:59.891+01:00
 * Generated source version: 3.0.4
 * 
 */
@WebServiceClient(name = "LondonGoldAndSilverFix", 
                  wsdlLocation = "file:/C:/prj/WebServicesPart1/git/ws_clients/SimpleWebServiceClient/GoldSilver.wsdl",
                  targetNamespace = "http://www.webservicex.net") 
public class LondonGoldAndSilverFix extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.webservicex.net", "LondonGoldAndSilverFix");
    public final static QName LondonGoldAndSilverFixSoap = new QName("http://www.webservicex.net", "LondonGoldAndSilverFixSoap");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/prj/WebServicesPart1/git/ws_clients/SimpleWebServiceClient/GoldSilver.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(LondonGoldAndSilverFix.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/prj/WebServicesPart1/git/ws_clients/SimpleWebServiceClient/GoldSilver.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public LondonGoldAndSilverFix(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public LondonGoldAndSilverFix(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public LondonGoldAndSilverFix() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public LondonGoldAndSilverFix(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public LondonGoldAndSilverFix(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public LondonGoldAndSilverFix(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    

    /**
     *
     * @return
     *     returns LondonGoldAndSilverFixSoap
     */
    @WebEndpoint(name = "LondonGoldAndSilverFixSoap")
    public LondonGoldAndSilverFixSoap getLondonGoldAndSilverFixSoap() {
        return super.getPort(LondonGoldAndSilverFixSoap, LondonGoldAndSilverFixSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns LondonGoldAndSilverFixSoap
     */
    @WebEndpoint(name = "LondonGoldAndSilverFixSoap")
    public LondonGoldAndSilverFixSoap getLondonGoldAndSilverFixSoap(WebServiceFeature... features) {
        return super.getPort(LondonGoldAndSilverFixSoap, LondonGoldAndSilverFixSoap.class, features);
    }

}
