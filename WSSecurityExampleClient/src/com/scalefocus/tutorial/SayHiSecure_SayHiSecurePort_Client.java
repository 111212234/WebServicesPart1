package com.scalefocus.tutorial;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.HashMap;
import java.util.Map;

import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

import org.apache.cxf.endpoint.Client;
import org.apache.cxf.endpoint.Endpoint;
import org.apache.cxf.frontend.ClientProxy;
import org.apache.cxf.interceptor.LoggingInInterceptor;
import org.apache.cxf.interceptor.LoggingOutInterceptor;
import org.apache.cxf.ws.security.wss4j.WSS4JInInterceptor;
import org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor;
import org.apache.wss4j.dom.handler.WSHandlerConstants;

import com.scalefocus.tutorial.callback.ClientPasswordCallback;

/**
 * This class was generated by Apache CXF 3.1.3
 * 2015-11-15T18:11:46.350+01:00
 * Generated source version: 3.1.3
 * 
 */
public final class SayHiSecure_SayHiSecurePort_Client {

    private static final QName SERVICE_NAME = new QName("http://tutorial.scalefocus.com", "SayHiSecureService");

    private SayHiSecure_SayHiSecurePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = SayHiSecureService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SayHiSecureService ss = new SayHiSecureService(wsdlURL, SERVICE_NAME);
        SayHiSecure port = ss.getSayHiSecurePort();  
        
        Client client = ClientProxy.getClient(port);
        Endpoint cxfEndpoint = client.getEndpoint();
        
        LoggingOutInterceptor outLogger = new LoggingOutInterceptor();
        LoggingInInterceptor inInterceptor = new LoggingInInterceptor();
        cxfEndpoint.getOutInterceptors().add(outLogger);
        cxfEndpoint.getInInterceptors().add(inInterceptor);
        
        //here we configure inbound wss4j interceptor for standalone client
        Map<String,Object> inProps = new HashMap<String,Object>();
        inProps.put(WSHandlerConstants.ACTION,WSHandlerConstants.TIMESTAMP + " " + WSHandlerConstants.SIGNATURE + " " + 
				WSHandlerConstants.ENCRYPT);
        inProps.put(WSHandlerConstants.SIG_PROP_FILE, "client-crypto.properties");
        inProps.put(WSHandlerConstants.DEC_PROP_FILE, "client-crypto.properties");
        inProps.put(WSHandlerConstants.PW_CALLBACK_CLASS, 
                ClientPasswordCallback.class.getName());
        WSS4JInInterceptor wssIn = new WSS4JInInterceptor(inProps);
        cxfEndpoint.getInInterceptors().add(wssIn);
    
        
        //here we configure outbound wss4j interceptor for standalone client
        Map<String,Object> outProps = new HashMap<String,Object>();
        outProps.put(WSHandlerConstants.ACTION,WSHandlerConstants.TIMESTAMP + " " + WSHandlerConstants.SIGNATURE + " " + 
        	    																	WSHandlerConstants.ENCRYPT);
        outProps.put(WSHandlerConstants.USER, "client");
        outProps.put(WSHandlerConstants.PW_CALLBACK_CLASS, 
            ClientPasswordCallback.class.getName());
        outProps.put(WSHandlerConstants.SIG_PROP_FILE, "client-crypto.properties");
        outProps.put(WSHandlerConstants.ENC_PROP_FILE, "client-crypto.properties");
        outProps.put(WSHandlerConstants.ENCRYPTION_USER, "server");
        WSS4JOutInterceptor wssOut = new WSS4JOutInterceptor(outProps);
        cxfEndpoint.getOutInterceptors().add(wssOut);
        
        {
        System.out.println("Invoking sayHiSecureOperation...");
        com.scalefocus.tutorial.GreetingType _sayHiSecureOperation_sayHiSecurePartIn = new com.scalefocus.tutorial.GreetingType();
        _sayHiSecureOperation_sayHiSecurePartIn.setNameElem("Nasko");
        _sayHiSecureOperation_sayHiSecurePartIn.setGreetingElem("Hello");
        java.lang.String _sayHiSecureOperation__return = port.sayHiSecureOperation(_sayHiSecureOperation_sayHiSecurePartIn);
        System.out.println("sayHiSecureOperation.result=" + _sayHiSecureOperation__return);


        }

        System.exit(0);
    }

}
