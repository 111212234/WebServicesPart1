package com.scalefocus.tutorial;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.3
 * 2015-11-15T18:11:46.407+01:00
 * Generated source version: 3.1.3
 * 
 */
@WebServiceClient(name = "SayHiSecureService", 
              //    wsdlLocation = "http://localhost:8180/WSSecurityExampleWS/services/SayHiSecurePort?wsdl",
				  wsdlLocation = "https://localhost:8143/WSSecurityExampleWS/services/SayHiSecurePort?wsdl",
                  targetNamespace = "http://tutorial.scalefocus.com") 
public class SayHiSecureService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tutorial.scalefocus.com", "SayHiSecureService");
    public final static QName SayHiSecurePort = new QName("http://tutorial.scalefocus.com", "SayHiSecurePort");
    static {

    	    //for localhost testing only
    	    javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(
    	    new javax.net.ssl.HostnameVerifier(){

    	        public boolean verify(String hostname,
    	                javax.net.ssl.SSLSession sslSession) {
    	            if (hostname.equals("localhost")) {
    	                return true;
    	            }
    	            return false;
    	        }
    	    });

        URL url = null;
        try {
           // url = new URL("http://localhost:8180/WSSecurityExampleWS/services/SayHiSecurePort?wsdl");
        	url = new URL("https://localhost:8143/WSSecurityExampleWS/services/SayHiSecurePort?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SayHiSecureService.class.getName())
                .log(java.util.logging.Level.INFO, 
                //     "Can not initialize the default wsdl from {0}", "http://localhost:8180/WSSecurityExampleWS/services/SayHiSecurePort?wsdl");
                		"Can not initialize the default wsdl from {0}", "https://localhost:8143/WSSecurityExampleWS/services/SayHiSecurePort?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SayHiSecureService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SayHiSecureService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SayHiSecureService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public SayHiSecureService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public SayHiSecureService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public SayHiSecureService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns SayHiSecure
     */
    @WebEndpoint(name = "SayHiSecurePort")
    public SayHiSecure getSayHiSecurePort() {
        return super.getPort(SayHiSecurePort, SayHiSecure.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SayHiSecure
     */
    @WebEndpoint(name = "SayHiSecurePort")
    public SayHiSecure getSayHiSecurePort(WebServiceFeature... features) {
        return super.getPort(SayHiSecurePort, SayHiSecure.class, features);
    }

}
